// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // 000 0000 0000 0000 RAM start
    // 011 1111 1111 1111 RAM end
    // 100 0000 0000 0000 Screen start
    // 101 1111 1111 1111 Screen end
    // 110 0000 0000 0000 Keyboard
    // 最上位2桁を見ればRAM、Screen、Keyboardの区別ができる

    DMux4Way(in=load, sel=address[13..14], a=temp1, b=temp2, c=temp3, d=temp4);
    Or(a=temp1, b=temp2, out=temp5);

    RAM16K(in=in, load=temp5, address=address[0..13], out=out1);
    Screen(in=in, load=temp3, address=address[0..12], out=out2);
    Keyboard(out=out3);

    Mux4Way16(a=out1, b=out1, c=out2, d=out3, sel=address[13..14], out=out);
}